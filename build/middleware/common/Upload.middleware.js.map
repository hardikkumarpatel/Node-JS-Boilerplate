{"version":3,"file":"Upload.middleware.js","names":["_multer","_interopRequireWildcard","require","_nodePath","_interopRequireDefault","_nodeFs","_UploadMiddleware","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","UploadMiddleware","multer","diskStorage","destination","_req","file","callback","folder","mimetype","startsWith","location","path","resolve","fs","existsSync","mkdirSync","recursive","filename","Date","now","originalname","FILES_EXT_TYPES","includes","MulterError","concat","join","storage","limits","fileSize","MAX_SIZE","fileFilter","filter","_default","exports"],"sources":["../../../src/middleware/common/Upload.middleware.js"],"sourcesContent":["import multer, { MulterError } from \"multer\";\nimport path from \"node:path\";\nimport fs from \"node:fs\";\n\nclass UploadMiddleware {\n  static MAX_SIZE = 1 * 1000 * 1000; /** 1MB */\n  static storage = multer.diskStorage({\n    destination(_req, file, callback) {\n      const folder = file.mimetype.startsWith(\"image/\") ? \"image\" : \"pdf\";\n      const location = path.resolve(\"src\", \"upload\", folder);\n      if (!fs.existsSync(location)) {\n        fs.mkdirSync(location, { recursive: true });\n      }\n      callback(null, location);\n    },\n    filename(_req, file, callback) {\n      callback(null, Date.now() + \"-\" + file.originalname);\n    }\n  });\n\n  static filter = (_req, file, callback) => {\n    const FILES_EXT_TYPES = [\"image/jpeg\", \"image/png\", \"image/gif\", \"application/pdf\"];\n    if (FILES_EXT_TYPES.includes(file.mimetype)) {\n      callback(null, true);\n    } else {\n      callback(\n        new MulterError(\n          \"INVALID_FILE_TYPE\",\n          `Invalid file type. Only ${FILES_EXT_TYPES.join(\", \")} files are allowed`\n        )\n      );\n    }\n  };\n\n  static upload = multer({\n    storage: this.storage,\n    limits: {\n      fileSize: this.MAX_SIZE\n    },\n    fileFilter: this.filter\n  });\n}\n\nexport default UploadMiddleware;\n"],"mappings":"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","ignoreList":[]}